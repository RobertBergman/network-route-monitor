name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - database-migration
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Convert repository name to lowercase
        id: repo
        run: echo "name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-components:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        component:
          - poller
          - exporter
          - api
          - grafana
          - db
    needs: build-and-push
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Convert repository name to lowercase
        id: repo
        run: echo "name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for component
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}-${{ matrix.component }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create component Dockerfile
        run: |
          # Use the branch name as the base image tag
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            BASE_TAG="latest"
          else
            BASE_TAG="${{ github.ref_name }}"
          fi
          
          # Special handling for Grafana and DB components
          if [ "${{ matrix.component }}" = "grafana" ]; then
            # Grafana uses its own Dockerfile
            echo "Using Dockerfile.grafana for Grafana build"
          elif [ "${{ matrix.component }}" = "db" ]; then
            # Database version uses its own Dockerfile
            echo "Using Dockerfile.db for database build"
          else
            cat > Dockerfile.${{ matrix.component }} << EOF
          FROM ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}:${BASE_TAG}
          EOF
          
            if [ "${{ matrix.component }}" = "poller" ]; then
              echo 'CMD ["python", "poller.py"]' >> Dockerfile.${{ matrix.component }}
            elif [ "${{ matrix.component }}" = "exporter" ]; then
              echo 'CMD ["python", "exporter.py"]' >> Dockerfile.${{ matrix.component }}
            elif [ "${{ matrix.component }}" = "api" ]; then
              echo 'CMD ["uvicorn", "webui:app", "--host", "0.0.0.0", "--port", "5000"]' >> Dockerfile.${{ matrix.component }}
            fi
          fi

      - name: Build and push component image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ (matrix.component == 'grafana' && 'Dockerfile.grafana') || (matrix.component == 'db' && 'Dockerfile.db') || format('Dockerfile.{0}', matrix.component) }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max